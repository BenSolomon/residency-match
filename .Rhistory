Pref <- 0.04
RR <- OR/((1-Pref) + (Pref * OR)))
RR <- OR/((1-Pref) + (Pref * OR))
25/17
(25/75)/(17/83)
OR <- 32.4
Pref <- 0.14
RR <- OR/((1-Pref) + (Pref * OR))
0.14*RR
choose(n = 5, k = 52)
choose(n = 52, k = 5)
(1/365)*29
(1/365)*(29!)
(1/365)*(factorial(29))
sum(1:29)
sum(1:29)/365
choose(365, 2)
1/635
1/365
365*2
choose(5,2)
choose(5,3)
choose(52, 3)
365^30
choose(47, 5)
choose(47, 5)*27
(0.003)*(0.9)
90/101
30*0.89
30-26.7
90/93.3
(0.15*0.0004)+(0.85*0.0001)
(0.15*0.0004)
(0.85*0.0001)
(0.15*0.0004)/((0.15*0.0004)+(0.85*0.0001))
0.1/0.75
0.03*0.99
(0.03*0.99) + 0.001
( 0.0297 * 0.03 ) / 0.0307
(0.001 * 0.97) + (0.99 * 0.03)
x <- (0.001 * 0.97) + (0.99 * 0.03)
(0.99*0.03)/x
(0.004 * 0.15) / ( (0.004 * 0.15) + (0.001 * 0.85))
(1)(1/3)/0.5
(1)*(1/3)/0.5
(1)*(2/3)/0.5
((1/2)*(1/3)) + ((1/2)*(2/3))
((1/2)*(2/3)) / (2/3)
((1/3)*(2/3)) / (2/3)
((1/2)*(1/3)) + ((1/3)*(2/3))
((1/2)*(1/3)) + ((1/2)*(2/3))
((1/2) * (1/3)) + 0 + ((1) * (1/3))
d <- ((1/2) * (1/3)) + 0 + ((1) * (1/3))
n <- (1/2)*(1/3)
n/d
0.3*70
0.04*0.4
10*20*30
0.8^4
1-(0.8^4)
0.75/0.88
d <- (1*(30/10000)) + (0.001*(1-(30/10000)))
n <- (30/10000)
n/d
(1-(1/1000))
(1-(1/1000))^1000
20*19
2/380
0.2*(80/99)
(0.2*(80/99)) + (0.8*(20/99))
6^10
replicate(10,
1+1)
replicate(10,
sample(1:6, 10, replace = T))
table(sample(1:6, 10, replace = T))
table(sample(1:6, 10, replace = T)) >= 5
any(table(sample(1:6, 10, replace = T)) >= 5)
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
xtab(
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
)
xtabs(
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
)
xtabs(table(
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
))
(
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
)
(table(
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
))
table(
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
)
prop.table(table(
replicate(10,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
))
prop.table(table(
replicate(1000,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
))
prop.table(table(
replicate(100000,
any(table(sample(1:6, 10, replace = T)) >= 5)
)
))
prop.table(table(
replicate(1000,
any(table(sample(1:365, 100, replace = T)) >= 4)
)
))
prop.table(table(
replicate(10000,
any(table(sample(1:365, 100, replace = T)) >= 4)
)
))
prop.table(table(
replicate(10000,
any(table(sample(1:365, 100, replace = T)) >= 4)
)
))
prop.table(table(
replicate(100000,
any(table(sample(1:365, 100, replace = T)) >= 4)
)
))
install.packages("MetaIntegrator")
library(MetaIntegrator)
sleData <- getGEOData(c("GSE11909","GSE50635", "GSE39088"))
getGEOData("GSE11909""
getGEOData("GSE11909")
getGEOData(c("GSE11909"))
?getGEOData
library(RMySQL)
sleData <- getGEOData(c("GSE11909","GSE50635", "GSE39088"))
dataObj1 <- tinyMetaObject$originalData$PBMC.Study.1
boxplot(dataObj1$expr[,1:15])
dataObj2 = tinyMetaObject$originalData$Whole.Blood.Study.1
dataObj3 = tinyMetaObject$originalData$Whole.Blood.Study.2
discovery_datasets <- list(dataObj1, dataObj2, dataObj3)
names(discovery_datasets) = c(dataObj1$formattedName, dataObj2$formattedName, dataObj3$formattedName)
exampleMetaObj=list()
exampleMetaObj$originalData <- discovery_datasets
str(exampleMetaObj)
runMetaAnalysis(metaObject)
runMetaAnalysis(exampleMetaObject)
runMetaAnalysis(exampleMetaObj)
install.packages("multtest")
library(MetaIntegrator)
install.packages("MetaIntegrator")
install.packages("multtest")
install.packages("Rtools")
install.packages("multtest")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("multtest")
library(multtest)
install.packages("MetaIntegrator")
sleData <- getGEOData(c("GSE11909","GSE50635", "GSE39088"))
library(MetaIntegrator)
sleData <- getGEOData(c("GSE11909","GSE50635", "GSE39088"))
dataObj1 <- tinyMetaObject$originalData$PBMC.Study.1
boxplot(dataObj1$expr[,1:15])
dataObj2 = tinyMetaObject$originalData$Whole.Blood.Study.1
dataObj3 = tinyMetaObject$originalData$Whole.Blood.Study.2
discovery_datasets <- list(dataObj1, dataObj2, dataObj3)
names(discovery_datasets) = c(dataObj1$formattedName, dataObj2$formattedName, dataObj3$formattedName)
exampleMetaObj=list()
exampleMetaObj$originalData <- discovery_datasets
str(exampleMetaObj)
runMetaAnalysis(exampleMetaObj)
BiocManager::install("multtest")
library(multtest)
runMetaAnalysis(exampleMetaObj)
str(exampleMetaObj, max.level = 2)
runMetaAnalysis(exampleMetaObj, maxCores = 1)
str(exampleMetaObj, max.level = 2)
exampleMetaObj <- filterGenes(exampleMetaObj, isLeaveOneOut = TRUE, FDRThresh = 0.001)
exampleMetaObj  <- runMetaAnalysis(exampleMetaObj, maxCores = 1)
str(exampleMetaObj, max.level = 2)
exampleMetaObj <- filterGenes(exampleMetaObj, isLeaveOneOut = TRUE, FDRThresh = 0.001)
summarizeFilterResults(exampleMetaObj, "FDR0.001_es0_nStudies1_looaTRUE_hetero0")
violinPlot(exampleMetaObj$filterResults$FDR0.001_es0_nStudies1_looaTRUE_hetero0, dataObj2, labelColumn = 'group')
violinPlot(exampleMetaObj$filterResults$FDR0.001_es0_nStudies1_looaTRUE_hetero0, dataObj2, labelColumn = 'group')
rocPlot(exampleMetaObj$filterResults$FDR0.001_es0_nStudies1_looaTRUE_hetero0, dataObj2, title = "ROC plot for discovery dataset2, FDR: 0.001")
forestPlot(exampleMetaObj, "Gene27")
?getGEOData
sleData <- getGEOData(c("GSE11909","GSE50635", "GSE39088"))
getGEOData()
getGEOData
?qnorm
?getGEOData
?lapply
lapply(c("GSE11909"), .GEOqueryCreateGEM)
sleData <- getGEOData(c("GSE11909","GSE50635", "GSE39088"))
?getGEOData
sleScores <- calculateScore(filterObject = exampleMetaObj$filterResults[[1]], datasetObject = exampleMetaObj$originalData[[1]])
heatmapPlot(metaObject = sleMetaAnalysis, filterObject = sleMetaAnalysis$filterResults[[1]])
heatmapPlot(metaObject = exampleMetaObj, filterObject = exampleMetaObj$filterResults[[1]])
tinyMetaObject
str(tinyMetaObject)
names(tinyMetaObject)
x <- tinyMetaObject$originalData$PBMC.Study.1
str(x)
names(x)
exampleDataSet <- tinyMetaObject$originalData$PBMC.Study.1
str(exampleDataSet)
names(exampleDataSet)
exampleDataSet
head(exampleDataSet$class)
str(exampleDataSet$class)
str(exampleDataSet)
head(exampleDataSet$class); head(exampleDataSet$class)
names(exampleDataSet)
head(exampleDataSet$class); head(exampleDataSet$expr); head(exampleDataSet$keys); head(exampleDataSet$pheno); head(exampleDataSet$formattedName)
br()
head(exampleDataSet$class); ;head(exampleDataSet$expr); head(exampleDataSet$keys); head(exampleDataSet$pheno); head(exampleDataSet$formattedName)
head(exampleDataSet$class)
head(exampleDataSet$expr)
head(exampleDataSet$keys)
head(exampleDataSet$pheno)
head(exampleDataSet$formattedName)
head(exampleDataSet$expr)
head(exampleDataSet$class)
table(exampleDataSet$class)
class(tinyMetaObject)
# install.packages("MetaIntegrator")
# BiocManager::install("multtest")
BiocManager::install("GEOquery")
library(GEOquery)
gse <- getGEO("GSE21653", GSEMatrix = TRUE)
show(gse)
getGEOData(c("GSE11909"))
sleData <- getGEOData(c("GSE11909","GSE50635", "GSE39088"))
str(sleData)
names(sleData)
names(sleData$originalData)
names(sleData$originalData$GSE50635 )
sleData$originalData$GSE50635 <- classFunction(sleData$originalData$GSE50635, column = "subject type:ch1",
diseaseTerms = c("Subject RBP +", "Subject RBP -"))
names(sleData$originalData$GSE50635)
?classFunction
class(sleData$originalData$GSE50635)
sleData$originalData$GSE50635$class
sleData$originalData$GSE11909_GPL96$class
sleData$originalData$GSE11909_GPL96 <- classFunction(sleData$originalData$GSE11909_GPL96, column = "Illness:ch1",
diseaseTerms = c("SLE"))
sleData$originalData$GSE11909_GPL96$class
names(sleData$originalData$GSE50635)
sleData$originalData$GSE11909_GPL96$pheno
df <- sleData$originalData$GSE11909_GPL96$pheno
View(df)
names(sleData$originalData$GSE11909_GPL96$pheno)
sleData$originalData$GSE11909_GPL96$pheno$'Illness:ch1'
sleData$originalData$GSE11909_GPL96 <- classFunction(sleData$originalData$GSE11909_GPL96, column = "Illness:ch1",
diseaseTerms = c("SLE"))
sleData$originalData$GSE11909_GPL96$class
sleData$originalData$GSE39088 <- classFunction(sleData$originalData$GSE39088, column= "disease state:ch1",
diseaseTerms=c("SLE"))
#Remove the GPL97 platform that was downloaded
sleData$originalData$GSE11909_GPL97 <- NULL
sleMetaAnalysis <- runMetaAnalysis(sleData, runLeaveOneOutAnalysis = F, maxCores = 1)
names(ssleMetaAnalysis)
names(sleMetaAnalysis)
copy <- sleMetaAnalysis
sleScores <- calculateScore(filterObject = sleMetaAnalysis$filterResults[[1]], datasetObject = sleMetaAnalysis$originalData[[1]])
sleScores <- calculateScore(filterObject = sleMetaAnalysis$filterResults[[1]], datasetObject = sleMetaAnalysis$originalData[[1]])
sleMetaAnalysis <- filterGenes(sleMetaAnalysis, isLeaveOneOut = F, effectSizeThresh = 1, FDRThresh = 0.05)
names(sleMetaAnalysis)
names(copy)
sleScores <- calculateScore(filterObject = sleMetaAnalysis$filterResults[[1]], datasetObject = sleMetaAnalysis$originalData[[1]])
sleScores
heatmapPlot(metaObject = sleMetaAnalysis, filterObject = sleMetaAnalysis$filterResults[[1]])
rocPlot(datasetObject = sleMetaAnalysis$originalData$GSE5063, filterObject = sleMetaAnalysis$filterResults[[1]])
multipleROCPlot(metaObject = sleMetaAnalysis, filterObject = sleMetaAnalysis$filterResults[[1]])
pathwayRes <- pathwayAnalysis( metaObject = sleMetaAnalysis)
names(sleMetaAnalysis)
sleMetaAnalysis$filterResults
sleScores
forwardSearch( metaObject = sleMetaAnalysis, filterObject = sleMetaAnalysis$filterResults[[1]])
forwardRes <- forwardSearch( metaObject = sleMetaAnalysis, filterObject = sleMetaAnalysis$filterResults[[1]])
names(forwardRes)
forwardRes
asthmaData <- getGEOData(c("GSE69683","GSE137394", "GSE35571"))
names(asthmaData)
names(sleData$originalData)
names(sleData$originalData$GSE50635)
names(asthmaData$originalData)
names(asthmaData$originalData$GSE69683)
asthmaData$originalData$GSE69683$pheno
df <- asthmaData$originalData$GSE69683$pheno
View(df)
table(df$`cohort:ch1`)
asthmaData$originalData$GSE69683$class
?classFunction
asthmaData$originalData$GSE69683$class
table(df$`cohort:ch1`)
df <- asthmaData$originalData$GSE137394$pheno
View(df)
table(df$`disease:ch1`)
asthmaData$originalData$GSE137394 <- NULL
df <- asthmaData$originalData$GSE35571$pheno
View(df)
table(df$`disease status:ch1`)
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE69683, column = "cohort:ch1", diseaseTerms = c("Moderate asthma, non-smoking","Severe asthma, non-smoking","Severe asthma, smoking"))
asthmaData$originalData$GSE35571 <- classFunction(asthmaData$originalData$GSE35571, column = "disease status:ch1", diseaseTerms = c("asthmatic"))
asthmaData$originalData$GSE35571$class
asthmaData <- runMetaAnalysis(asthmaData, runLeaveOneOutAnalysis = F, maxCores = 1)
asthmaMetaAnalysis <- filterGenes(asthmaMetaAnalysis, isLeaveOneOut = F, effectSizeThresh = 1, FDRThresh = 0.05)
asthmaData <- filterGenes(asthmaData, isLeaveOneOut = F, effectSizeThresh = 1, FDRThresh = 0.05)
asthmaData$filterResults
asthmaData$metaAnalysis
asthmaData$metaAnalysis$analysisDescription
asthmaData$metaAnalysis$pooledResults
df <- asthmaData$metaAnalysis$pooledResults
View(df)
asthmaData <- filterGenes(asthmaData, isLeaveOneOut = F, effectSizeThresh = 0.5, FDRThresh = 0.05)
asthmaData$filterResults
heatmapPlot(metaObject = asthmaData, filterObject = asthmaData$filterResults[[1]])
asthmaData <- filterGenes(asthmaData, isLeaveOneOut = F, effectSizeThresh = 0.5, FDRThresh = 0.05)
heatmapPlot(metaObject = asthmaData, filterObject = asthmaData$filterResults[[1]])
names(asthmaData)
asthmaData$filterResults <- NULL
asthmaData <- filterGenes(asthmaData, isLeaveOneOut = F, effectSizeThresh = 0.5, FDRThresh = 0.05)
heatmapPlot(metaObject = asthmaData, filterObject = asthmaData$filterResults[[1]])
multipleROCPlot(metaObject = asthmaData, filterObject = asthmaData$filterResults[[1]])
summaryROCPlot(metaObject = asthmaData, filterObject = asthmaData$filterResults[[1]], bootstrapReps = 100)
pooledROCPlot(metaObject = asthmaData, filterObject = asthmaData$filterResults[[1]])
violinPlot(filterObject = asthmaData$filterResults[[1]], datasetObject = asthmaData$originalData$GSE69683, labelColumn = "x")
violinPlot(filterObject = asthmaData$filterResults[[1]], datasetObject = asthmaData$originalData$GSE69683, labelColumn = "cohort:ch1")
violinPlot(filterObject = asthmaData$filterResults[[1]], datasetObject = asthmaData$originalData$GSE69683, labelColumn = "cohort:ch1") + theme_classic()
library(ggplot2)
violinPlot(filterObject = asthmaData$filterResults[[1]], datasetObject = asthmaData$originalData$GSE69683, labelColumn = "cohort:ch1") + theme_classic()
df <- asthmaData$originalData$GSE69683$pheno
View(df)
violinPlot(filterObject = asthmaData$filterResults[[1]], datasetObject = asthmaData$originalData$GSE69683, labelColumn = "gender:ch1") + theme_classic()
genes <- asthmaData$filterResults$FDR0.05_es0.5_nStudies1_looaFALSE_hetero0$posGeneNames
genes
genes <- c(asthmaData$filterResults$FDR0.05_es0.5_nStudies1_looaFALSE_hetero0$posGeneNames, asthmaData$filterResults$FDR0.05_es0.5_nStudies1_looaFALSE_hetero0$negGeneNames)
genes
forestPlot(geneName="GAPT", metaObject = asthmaData)
?forestPlot
forestPlot(geneName=c("GAPT", "CLC"), metaObject = asthmaData)
df <- asthmaData$originalData$GSE137394$pheno
asthmaData <- getGEOData(c("GSE69683","GSE137394", "GSE35571"))
df <- asthmaData$originalData$GSE137394$pheno
View(df)
df$`disease:ch1`
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE69683, column = "cohort:ch1", diseaseTerms = c("Moderate asthma, non-smoking","Severe asthma, non-smoking","Severe asthma, smoking"))
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE137394, column = "disease:ch1", diseaseTerms = c("Asthma at baseline"))
asthmaData$originalData$GSE35571 <- classFunction(asthmaData$originalData$GSE35571, column = "disease status:ch1", diseaseTerms = c("asthmatic"))
asthmaData <- runMetaAnalysis(asthmaData, runLeaveOneOutAnalysis = F, maxCores = 1)
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE69683, column = "cohort:ch1", diseaseTerms = c("Moderate asthma, non-smoking","Severe asthma, non-smoking","Severe asthma, smoking"))
# asthmaData$originalData$GSE137394 <- NULL
asthmaData$originalData$GSE137394 <- classFunction(asthmaData$originalData$GSE137394, column = "disease:ch1", diseaseTerms = c("Asthma at baseline"))
asthmaData$originalData$GSE35571 <- classFunction(asthmaData$originalData$GSE35571, column = "disease status:ch1", diseaseTerms = c("asthmatic"))
asthmaData <- runMetaAnalysis(asthmaData, runLeaveOneOutAnalysis = F, maxCores = 1)
asthmaData$originalData$GSE69683$class
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE69683, column = "cohort:ch1", diseaseTerms = c("Moderate asthma, non-smoking","Severe asthma, non-smoking","Severe asthma, smoking"))
asthmaData$originalData$GSE69683$pheon
asthmaData$originalData$GSE69683$pheno
df <- asthmaData$originalData$GSE69683$pheno
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE69683, column = "cohort:ch1", diseaseTerms = c("Moderate asthma, non-smoking","Severe asthma, non-smoking","Severe asthma, smoking"))
asthmaData$originalData$GSE69683
asthmaData$originalData$GSE69683$class <- NULL
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE69683, column = "cohort:ch1", diseaseTerms = c("Moderate asthma, non-smoking","Severe asthma, non-smoking","Severe asthma, smoking"))
df <- asthmaData$originalData$GSE69683$pheno
View(df)
asthmaData <- getGEOData(c("GSE69683","GSE137394", "GSE35571"))
copy <- asthmaData
asthmaData$originalData$GSE69683 <- classFunction(asthmaData$originalData$GSE69683, column = "cohort:ch1", diseaseTerms = c("Moderate asthma, non-smoking","Severe asthma, non-smoking","Severe asthma, smoking"))
# asthmaData$originalData$GSE137394 <- NULL
asthmaData$originalData$GSE137394 <- classFunction(asthmaData$originalData$GSE137394, column = "disease:ch1", diseaseTerms = c("Asthma at baseline"))
asthmaData$originalData$GSE35571 <- classFunction(asthmaData$originalData$GSE35571, column = "disease status:ch1", diseaseTerms = c("asthmatic"))
asthmaData <- runMetaAnalysis(asthmaData, runLeaveOneOutAnalysis = F, maxCores = 1)
10/(0.5*1000)
3/sum(c(10,2,4,8,12,14,10,1,3))
4/5
(4/5)*(3/4)
(3/5)
e
exp(2)
1-exp(-0.05*12)
1-exp(-0.1*3)
exp(-0.1*3)
1-exp(-0.1*(3^0.2))
exp(-0.1*(3^0.2))
exp(-0.1*(3^1.2))
0.1*(2^0.2)
0.1*(3^0.2)
0.1*(3^1.2)
0.1*(2^1.2)
90*0.23
69*0.37
1-exp(-0.1*(3^1.2))
exp(-0.1*(3^1.2))
shiny::runApp('D:/Google Drive/Stanford/Kawasaki App')
shiny::runApp('D:/Google Drive/Stanford/Kawasaki App')
runApp('D:/Google Drive/Stanford/Kawasaki App')
runApp('D:/Google Drive/Stanford/Kawasaki App')
runApp('D:/Google Drive/Stanford/Kawasaki App')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/pediatric-bp')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
shiny::runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
install.packages("shinyjs")
runApp('D:/Downloads/test13.R')
runApp('D:/Downloads/test13.R')
install.packages("shinyBS")
runApp('D:/Downloads/test13.R')
runApp('D:/Downloads/test13.R')
runApp('D:/Downloads/test13.R')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
?bsCollapsePanel
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
?icon
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
?icon
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
?includeHTML
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
1/2020
1/2019
shiny::runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
runApp('D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc')
setwd("D:/Google Drive/ShinyServer/shiny-server/kawasaki-dc")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("D:/Google Drive/ShinyServer/shiny-server/residency-match")
install.packages("shinycssloaders")
runApp()
runApp()
runApp()
runApp()
runApp()
